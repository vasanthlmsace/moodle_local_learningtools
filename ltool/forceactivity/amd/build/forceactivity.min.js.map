{"version":3,"file":"forceactivity.min.js","sources":["../src/forceactivity.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * forceactivity ltool define js.\n * @module   ltool_forceactivity\n * @category  Classes - autoloading\n * @copyright 2021, bdecent gmbh bdecent.de\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define(['jquery', 'core/modal_factory', 'core/str', 'core/fragment', 'core/modal_events', 'core/ajax', 'core/notification'],\n function($, ModalFactory, Str, Fragment, ModalEvents, Ajax, notification) {\n\n    /* global ltools */\n\n    /**\n     * Controls bookmarks tool action.\n     * @param {object} params\n     */\n    function learningToolforceactivityAction(params) {\n        showModalforceactivitytool(params);\n    }\n\n    /**\n     * Display the modal to forceactivity user emails.\n     * @param {object} params\n     */\n    function showModalforceactivitytool(params) {\n        var forceactivityinfo = document.querySelector(\".ltoolforceactivity-info #ltoolforceactivity-action\");\n        if (forceactivityinfo) {\n            forceactivityinfo.addEventListener(\"click\", function() {\n                // Strforceactivityusers.\n                ModalFactory.create({\n                    title: Str.get_string('forceactivity', 'local_learningtools'),\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    body: getForceActivityModal(params),\n                    large: true\n                }).then(function(modal) {\n                    modal.show();\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        modal.destroy();\n                    });\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        e.preventDefault();\n                        $(e.target).find(\"button[data-action=save]\").attr(\"disabled\", true);\n                        modal.getRoot().find('form').submit();\n                    });\n                    modal.getRoot().on('submit', 'form', e => {\n                        e.preventDefault();\n                        submitFormData(modal, params);\n                    });\n                    return modal;\n                }).catch(notification.exception);\n            });\n\n            // Hover color.\n            var forceactivityhovercolor = forceactivityinfo.getAttribute(\"data-hovercolor\");\n            var forceactivityfontcolor = forceactivityinfo.getAttribute(\"data-fontcolor\");\n            if (forceactivityhovercolor && forceactivityfontcolor) {\n                forceactivityinfo.addEventListener(\"mouseover\", function() {\n                    document.querySelector('#ltoolforceactivity-info p').style.background = forceactivityhovercolor;\n                    document.querySelector('#ltoolforceactivity-info p').style.color = forceactivityfontcolor;\n                });\n            }\n        }\n    }\n\n    /**\n     * Submit the modal data form.\n     * @param {object} modal object\n     * @param {array} params  list of parameters\n     * @return {void} ajax respoltoolsnse.\n     */\n    function submitFormData(modal, params) {\n        var modalform = document.querySelectorAll('#forceactivity-modalinfo form')[0];\n        var formData = new URLSearchParams(new FormData(modalform)).toString();\n        params = JSON.stringify(params);\n        Ajax.call([{\n            methodname: 'ltool_forceactivity_forceactivityaction',\n            args: {params: params, formdata: formData},\n            done: function(response) {\n                modal.hide();\n                if (response) {\n                    var successinfo = Str.get_string('successforceactivityusers', 'local_learningtools');\n                    $.when(successinfo).done(function(localizedEditString) {\n                        notification.addNotification({\n                            message: localizedEditString,\n                            type: \"success\"\n                        });\n                    });\n                    if (ltools.disappertimenotify != 0) {\n                        setTimeout(function() {\n                            document.querySelector(\"span.notifications\").innerHTML = \"\";\n                        }, ltools.disappertimenotify);\n                    }\n                }\n            }\n        }]);\n    }\n    /**\n     * Get forceactivity Modal info.\n     * @param {object} params\n     * @return {string} textarea html\n     */\n    function getForceActivityModal(params) {\n        return Fragment.loadFragment('ltool_forceactivity', 'get_forceactivitymodal_form', params.contextid, params);\n    }\n\n    return {\n        init: function(params) {\n            learningToolforceactivityAction(params);\n        }\n    };\n });"],"names":["define","$","ModalFactory","Str","Fragment","ModalEvents","Ajax","notification","learningToolforceactivityAction","params","forceactivityinfo","document","querySelector","addEventListener","create","title","get_string","type","types","SAVE_CANCEL","body","getForceActivityModal","large","then","modal","show","getRoot","on","hidden","destroy","save","e","preventDefault","target","find","attr","submit","modalform","querySelectorAll","formData","URLSearchParams","FormData","toString","JSON","stringify","call","methodname","args","formdata","done","response","hide","successinfo","when","localizedEditString","addNotification","message","ltools","disappertimenotify","setTimeout","innerHTML","submitFormData","catch","exception","forceactivityhovercolor","getAttribute","forceactivityfontcolor","style","background","color","showModalforceactivitytool","loadFragment","contextid","init"],"mappings":";;;;;;;AAuBCA,2CAAO,CAAC,SAAU,qBAAsB,WAAY,gBAAiB,oBAAqB,YAAa,sBACvG,SAASC,EAAGC,aAAcC,IAAKC,SAAUC,YAAaC,KAAMC,uBAQhDC,gCAAgCC,kBAQLA,YAC5BC,kBAAoBC,SAASC,cAAc,0DAC3CF,kBAAmB,CACnBA,kBAAkBG,iBAAiB,SAAS,WAExCX,aAAaY,OAAO,CAChBC,MAAOZ,IAAIa,WAAW,gBAAiB,uBACvCC,KAAMf,aAAagB,MAAMC,YACzBC,KAAMC,sBAAsBZ,QAC5Ba,OAAO,IACRC,MAAK,SAASC,cACbA,MAAMC,OACND,MAAME,UAAUC,GAAGtB,YAAYuB,QAAQ,WACnCJ,MAAMK,aAEVL,MAAME,UAAUC,GAAGtB,YAAYyB,MAAM,SAASC,GAC1CA,EAAEC,iBACF/B,EAAE8B,EAAEE,QAAQC,KAAK,4BAA4BC,KAAK,YAAY,GAC9DX,MAAME,UAAUQ,KAAK,QAAQE,YAEjCZ,MAAME,UAAUC,GAAG,SAAU,QAAQI,IACjCA,EAAEC,0BAyBER,MAAOf,YACvB4B,UAAY1B,SAAS2B,iBAAiB,iCAAiC,GACvEC,SAAW,IAAIC,gBAAgB,IAAIC,SAASJ,YAAYK,WAC5DjC,OAASkC,KAAKC,UAAUnC,QACxBH,KAAKuC,KAAK,CAAC,CACPC,WAAY,0CACZC,KAAM,CAACtC,OAAQA,OAAQuC,SAAUT,UACjCU,KAAM,SAASC,aACX1B,MAAM2B,OACFD,SAAU,KACNE,YAAcjD,IAAIa,WAAW,4BAA6B,uBAC9Df,EAAEoD,KAAKD,aAAaH,MAAK,SAASK,qBAC9B/C,aAAagD,gBAAgB,CACzBC,QAASF,oBACTrC,KAAM,eAGmB,GAA7BwC,OAAOC,oBACPC,YAAW,WACPhD,SAASC,cAAc,sBAAsBgD,UAAY,KAC1DH,OAAOC,yBA5CVG,CAAerC,MAAOf,WAEnBe,SACRsC,MAAMvD,aAAawD,kBAItBC,wBAA0BtD,kBAAkBuD,aAAa,mBACzDC,uBAAyBxD,kBAAkBuD,aAAa,kBACxDD,yBAA2BE,wBAC3BxD,kBAAkBG,iBAAiB,aAAa,WAC5CF,SAASC,cAAc,8BAA8BuD,MAAMC,WAAaJ,wBACxErD,SAASC,cAAc,8BAA8BuD,MAAME,MAAQH,2BAzC/EI,CAA2B7D,iBAoFtBY,sBAAsBZ,eACpBL,SAASmE,aAAa,sBAAuB,8BAA+B9D,OAAO+D,UAAW/D,cAGlG,CACHgE,KAAM,SAAShE,QACXD,gCAAgCC"}